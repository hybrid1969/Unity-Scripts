<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<title>Save and Load from XML - Unify Community Wiki</title>
<meta charset="UTF-8" />
<meta name="generator" content="MediaWiki 1.19.1" />
<link rel="shortcut icon" href="/favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="/opensearch_desc.php" title="Unify Community Wiki (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://wiki.unity3d.com/api.php?action=rsd" />
<link rel="copyright" href="http://creativecommons.org/licenses/by-sa/3.0/" />
<link rel="alternate" type="application/atom+xml" title="Unify Community Wiki Atom feed" href="/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="stylesheet" href="http://wiki.unity3d.com/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.legacy.commonPrint%2Cshared%7Cskins.vector&amp;only=styles&amp;skin=vector&amp;*" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="http://wiki.unity3d.com/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=vector&amp;*" />
<style>a:lang(ar),a:lang(ckb),a:lang(fa),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}a.new,#quickbar a.new{color:#ba0000}

/* cache key: mediawiki:resourceloader:filter:minify-css:7:c88e2bcd56513749bec09a7e29cb3ffa */
</style>

<script src="http://wiki.unity3d.com/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Save_and_Load_from_XML","wgTitle":"Save and Load from XML","wgCurRevisionId":14817,"wgArticleId":2365,"wgIsArticle":true,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":[],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgRelevantPageName":"Save_and_Load_from_XML","wgRestrictionEdit":[],"wgRestrictionMove":[]});
}</script><script>if(window.mw){
mw.loader.implement("user.options",function($){mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"externaldiff":0,"externaleditor":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"highlightbroken":1,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"quickbar":5,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"showjumplinks":1,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"vector","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":0,"watchdefault":0,"watchdeletion":0,
"watchlistdays":3,"watchlisthideanons":0,"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"variant":"en","language":"en","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false});;},{},{});mw.loader.implement("user.tokens",function($){mw.user.tokens.set({"editToken":"+\\","watchToken":false});;},{},{});

/* cache key: mediawiki:resourceloader:filter:minify-js:7:9983699ab6150ffa89a90653b2338ac8 */
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.page.startup","mediawiki.legacy.wikibits","mediawiki.legacy.ajax"]);
}</script>
<style type="text/css">/*<![CDATA[*/
.source-csharp {line-height: normal;}
.source-csharp li, .source-csharp pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for csharp
 * CSS class: source-csharp, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.csharp.source-csharp .de1, .csharp.source-csharp .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.csharp.source-csharp  {font-family:monospace;}
.csharp.source-csharp .imp {font-weight: bold; color: red;}
.csharp.source-csharp li, .csharp.source-csharp .li1 {font-weight: normal; vertical-align:top;}
.csharp.source-csharp .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.csharp.source-csharp .li2 {font-weight: bold; vertical-align:top;}
.csharp.source-csharp .kw1 {color: #0600FF; font-weight: bold;}
.csharp.source-csharp .kw2 {color: #FF8000; font-weight: bold;}
.csharp.source-csharp .kw3 {color: #008000;}
.csharp.source-csharp .kw4 {color: #6666cc; font-weight: bold;}
.csharp.source-csharp .kw5 {color: #000000;}
.csharp.source-csharp .co1 {color: #008080; font-style: italic;}
.csharp.source-csharp .co2 {color: #008080;}
.csharp.source-csharp .co3 {color: #008080;}
.csharp.source-csharp .coMULTI {color: #008080; font-style: italic;}
.csharp.source-csharp .es0 {color: #008080; font-weight: bold;}
.csharp.source-csharp .es_h {color: #008080; font-weight: bold;}
.csharp.source-csharp .br0 {color: #008000;}
.csharp.source-csharp .sy0 {color: #008000;}
.csharp.source-csharp .st0 {color: #666666;}
.csharp.source-csharp .st_h {color: #666666;}
.csharp.source-csharp .nu0 {color: #FF0000;}
.csharp.source-csharp .me1 {color: #0000FF;}
.csharp.source-csharp .me2 {color: #0000FF;}
.csharp.source-csharp .ln-xtra, .csharp.source-csharp li.ln-xtra, .csharp.source-csharp div.ln-xtra {background-color: #ffc;}
.csharp.source-csharp span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-javascript {line-height: normal;}
.source-javascript li, .source-javascript pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for javascript
 * CSS class: source-javascript, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.javascript.source-javascript .de1, .javascript.source-javascript .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.javascript.source-javascript  {font-family:monospace;}
.javascript.source-javascript .imp {font-weight: bold; color: red;}
.javascript.source-javascript li, .javascript.source-javascript .li1 {font-weight: normal; vertical-align:top;}
.javascript.source-javascript .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.javascript.source-javascript .li2 {font-weight: bold; vertical-align:top;}
.javascript.source-javascript .kw1 {color: #000066; font-weight: bold;}
.javascript.source-javascript .kw2 {color: #003366; font-weight: bold;}
.javascript.source-javascript .kw3 {color: #000066;}
.javascript.source-javascript .co1 {color: #006600; font-style: italic;}
.javascript.source-javascript .co2 {color: #009966; font-style: italic;}
.javascript.source-javascript .coMULTI {color: #006600; font-style: italic;}
.javascript.source-javascript .es0 {color: #000099; font-weight: bold;}
.javascript.source-javascript .br0 {color: #009900;}
.javascript.source-javascript .sy0 {color: #339933;}
.javascript.source-javascript .st0 {color: #3366CC;}
.javascript.source-javascript .nu0 {color: #CC0000;}
.javascript.source-javascript .me1 {color: #660066;}
.javascript.source-javascript .ln-xtra, .javascript.source-javascript li.ln-xtra, .javascript.source-javascript div.ln-xtra {background-color: #ffc;}
.javascript.source-javascript span.xtra { display:block; }

/*]]>*/
</style><!--[if lt IE 7]><style type="text/css">body{behavior:url("/skins/vector/csshover.min.htc")}</style><![endif]--></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Save_and_Load_from_XML skin-vector action-view">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<!-- content -->
		<div id="content" class="mw-body">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<!-- firstHeading -->
			<h1 id="firstHeading" class="firstHeading">
				<span dir="auto">Save and Load from XML</span>
			</h1>
			<!-- /firstHeading -->
			<!-- bodyContent -->
			<div id="bodyContent">
								<!-- tagline -->
				<div id="siteSub">From Unify Community Wiki</div>
				<!-- /tagline -->
								<!-- subtitle -->
				<div id="contentSub"></div>
				<!-- /subtitle -->
																<!-- jumpto -->
				<div id="jump-to-nav" class="mw-jump">
					Jump to: <a href="#mw-head">navigation</a>,
					<a href="#p-search">search</a>
				</div>
				<!-- /jumpto -->
								<!-- bodycontent -->
				<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><h3> <span class="mw-headline" id="Save_and_Load_Info_to_XML">Save and Load Info to XML</span></h3>
<p>This script will allow you to save and load data about an object into an XML file.
To use, add an empty game object to the scene and attache the script to the object.
Change the Player on that game object property to the item you wish to save properties about.
When you start the scene, you will see a save and load button, these allow you to save and load the information from the xml file.
The guts of what you save is located in the UserData class, change this as you see fit to allow you to save what you want. You will also need to update the save method to store the information that you are looking to store. At the moment, the code is only setup to store the postition of the object in world space. 
</p><p>Author: Zumwalt
</p>
<div dir="ltr" class="mw-geshi mw-content-ltr"><div class="csharp source-csharp"><pre class="de1"><span class="kw1">using</span> <span class="co3">UnityEngine</span><span class="sy0">;</span> 
<span class="kw1">using</span> <span class="co3">System.Collections</span><span class="sy0">;</span> 
<span class="kw1">using</span> <span class="co3">System.Xml</span><span class="sy0">;</span> 
<span class="kw1">using</span> <span class="co3">System.Xml.Serialization</span><span class="sy0">;</span> 
<span class="kw1">using</span> <span class="co3">System.IO</span><span class="sy0">;</span> 
<span class="kw1">using</span> <span class="co3">System.Text</span><span class="sy0">;</span> 
&#160;
<span class="kw1">public</span> <span class="kw4">class</span> _GameSaveLoad<span class="sy0">:</span> MonoBehaviour <span class="br0">&#123;</span> 
&#160;
   <span class="co1">// An example where the encoding can be found is at </span>
   <span class="co1">// http://www.eggheadcafe.com/articles/system.xml.xmlserialization.asp </span>
   <span class="co1">// We will just use the KISS method and cheat a little and use </span>
   <span class="co1">// the examples from the web page since they are fully described </span>
&#160;
   <span class="co1">// This is our local private members </span>
   Rect _Save, _Load, _SaveMSG, _LoadMSG<span class="sy0">;</span> 
   <span class="kw4">bool</span> _ShouldSave, _ShouldLoad,_SwitchSave,_SwitchLoad<span class="sy0">;</span> 
   <span class="kw4">string</span> _FileLocation,_FileName<span class="sy0">;</span> 
   <span class="kw1">public</span> GameObject _Player<span class="sy0">;</span> 
   UserData myData<span class="sy0">;</span> 
   <span class="kw4">string</span> _PlayerName<span class="sy0">;</span> 
   <span class="kw4">string</span> _data<span class="sy0">;</span> 
&#160;
   Vector3 VPosition<span class="sy0">;</span> 
&#160;
   <span class="co1">// When the EGO is instansiated the Start will trigger </span>
   <span class="co1">// so we setup our initial values for our local members </span>
   <span class="kw4">void</span> Start <span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span> 
      <span class="co1">// We setup our rectangles for our messages </span>
      _Save<span class="sy0">=</span><span class="kw3">new</span> Rect<span class="br0">&#40;</span><span class="nu0">10</span>,<span class="nu0">80</span>,<span class="nu0">100</span>,<span class="nu0">20</span><span class="br0">&#41;</span><span class="sy0">;</span> 
      _Load<span class="sy0">=</span><span class="kw3">new</span> Rect<span class="br0">&#40;</span><span class="nu0">10</span>,<span class="nu0">100</span>,<span class="nu0">100</span>,<span class="nu0">20</span><span class="br0">&#41;</span><span class="sy0">;</span> 
      _SaveMSG<span class="sy0">=</span><span class="kw3">new</span> Rect<span class="br0">&#40;</span><span class="nu0">10</span>,<span class="nu0">120</span>,<span class="nu0">400</span>,<span class="nu0">40</span><span class="br0">&#41;</span><span class="sy0">;</span> 
      _LoadMSG<span class="sy0">=</span><span class="kw3">new</span> Rect<span class="br0">&#40;</span><span class="nu0">10</span>,<span class="nu0">140</span>,<span class="nu0">400</span>,<span class="nu0">40</span><span class="br0">&#41;</span><span class="sy0">;</span> 
&#160;
      <span class="co1">// Where we want to save and load to and from </span>
      _FileLocation<span class="sy0">=</span>Application<span class="sy0">.</span><span class="me1">dataPath</span><span class="sy0">;</span> 
      _FileName<span class="sy0">=</span><span class="st0">&quot;SaveData.xml&quot;</span><span class="sy0">;</span> 
&#160;
      <span class="co1">// for now, lets just set the name to Joe Schmoe </span>
      _PlayerName <span class="sy0">=</span> <span class="st0">&quot;Joe Schmoe&quot;</span><span class="sy0">;</span> 
&#160;
      <span class="co1">// we need soemthing to store the information into </span>
      myData<span class="sy0">=</span><span class="kw3">new</span> UserData<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> 
   <span class="br0">&#125;</span> 
&#160;
   <span class="kw4">void</span> Update <span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><span class="br0">&#125;</span> 
&#160;
   <span class="kw4">void</span> OnGUI<span class="br0">&#40;</span><span class="br0">&#41;</span> 
   <span class="br0">&#123;</span>    
&#160;
   <span class="co1">//*************************************************** </span>
   <span class="co1">// Loading The Player... </span>
   <span class="co1">// **************************************************       </span>
   <span class="kw1">if</span> <span class="br0">&#40;</span>GUI<span class="sy0">.</span><span class="me1">Button</span><span class="br0">&#40;</span>_Load,<span class="st0">&quot;Load&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span> 
&#160;
      GUI<span class="sy0">.</span><span class="me1">Label</span><span class="br0">&#40;</span>_LoadMSG,<span class="st0">&quot;Loading from: &quot;</span><span class="sy0">+</span>_FileLocation<span class="br0">&#41;</span><span class="sy0">;</span> 
      <span class="co1">// Load our UserData into myData </span>
      LoadXML<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> 
      <span class="kw1">if</span><span class="br0">&#40;</span>_data<span class="sy0">.</span><span class="me1">ToString</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy0">!=</span> <span class="st0">&quot;&quot;</span><span class="br0">&#41;</span> 
      <span class="br0">&#123;</span> 
        <span class="co1">// notice how I use a reference to type (UserData) here, you need this </span>
        <span class="co1">// so that the returned object is converted into the correct type </span>
        myData <span class="sy0">=</span> <span class="br0">&#40;</span>UserData<span class="br0">&#41;</span>DeserializeObject<span class="br0">&#40;</span>_data<span class="br0">&#41;</span><span class="sy0">;</span> 
		<span class="co1">// set the players position to the data we loaded </span>
        VPosition<span class="sy0">=</span><span class="kw3">new</span> Vector3<span class="br0">&#40;</span>myData<span class="sy0">.</span>_iUser<span class="sy0">.</span><span class="me1">x</span>,myData<span class="sy0">.</span>_iUser<span class="sy0">.</span><span class="me1">y</span>,myData<span class="sy0">.</span>_iUser<span class="sy0">.</span><span class="me1">z</span><span class="br0">&#41;</span><span class="sy0">;</span>              
        _Player<span class="sy0">.</span><span class="me1">transform</span><span class="sy0">.</span><span class="me1">position</span><span class="sy0">=</span>VPosition<span class="sy0">;</span> 
        <span class="co1">// just a way to show that we loaded in ok </span>
        Debug<span class="sy0">.</span><span class="me1">Log</span><span class="br0">&#40;</span>myData<span class="sy0">.</span>_iUser<span class="sy0">.</span><span class="me1">name</span><span class="br0">&#41;</span><span class="sy0">;</span> 
      <span class="br0">&#125;</span> 
&#160;
   <span class="br0">&#125;</span> 
&#160;
   <span class="co1">//*************************************************** </span>
   <span class="co1">// Saving The Player... </span>
   <span class="co1">// **************************************************    </span>
   <span class="kw1">if</span> <span class="br0">&#40;</span>GUI<span class="sy0">.</span><span class="me1">Button</span><span class="br0">&#40;</span>_Save,<span class="st0">&quot;Save&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span> 
&#160;
     GUI<span class="sy0">.</span><span class="me1">Label</span><span class="br0">&#40;</span>_SaveMSG,<span class="st0">&quot;Saving to: &quot;</span><span class="sy0">+</span>_FileLocation<span class="br0">&#41;</span><span class="sy0">;</span> 
     myData<span class="sy0">.</span>_iUser<span class="sy0">.</span><span class="me1">x</span><span class="sy0">=</span>_Player<span class="sy0">.</span><span class="me1">transform</span><span class="sy0">.</span><span class="me1">position</span><span class="sy0">.</span><span class="me1">x</span><span class="sy0">;</span> 
     myData<span class="sy0">.</span>_iUser<span class="sy0">.</span><span class="me1">y</span><span class="sy0">=</span>_Player<span class="sy0">.</span><span class="me1">transform</span><span class="sy0">.</span><span class="me1">position</span><span class="sy0">.</span><span class="me1">y</span><span class="sy0">;</span> 
     myData<span class="sy0">.</span>_iUser<span class="sy0">.</span><span class="me1">z</span><span class="sy0">=</span>_Player<span class="sy0">.</span><span class="me1">transform</span><span class="sy0">.</span><span class="me1">position</span><span class="sy0">.</span><span class="me1">z</span><span class="sy0">;</span> 
     myData<span class="sy0">.</span>_iUser<span class="sy0">.</span><span class="me1">name</span><span class="sy0">=</span>_PlayerName<span class="sy0">;</span>    
&#160;
     <span class="co1">// Time to creat our XML! </span>
     _data <span class="sy0">=</span> SerializeObject<span class="br0">&#40;</span>myData<span class="br0">&#41;</span><span class="sy0">;</span> 
     <span class="co1">// This is the final resulting XML from the serialization process </span>
     CreateXML<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> 
     Debug<span class="sy0">.</span><span class="me1">Log</span><span class="br0">&#40;</span>_data<span class="br0">&#41;</span><span class="sy0">;</span> 
   <span class="br0">&#125;</span> 
&#160;
&#160;
   <span class="br0">&#125;</span> 
&#160;
   <span class="coMULTI">/* The following metods came from the referenced URL */</span> 
   <span class="kw4">string</span> UTF8ByteArrayToString<span class="br0">&#40;</span><span class="kw4">byte</span><span class="br0">&#91;</span><span class="br0">&#93;</span> characters<span class="br0">&#41;</span> 
   <span class="br0">&#123;</span>      
      UTF8Encoding encoding <span class="sy0">=</span> <span class="kw3">new</span> UTF8Encoding<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> 
      <span class="kw4">string</span> constructedString <span class="sy0">=</span> encoding<span class="sy0">.</span><span class="me1">GetString</span><span class="br0">&#40;</span>characters<span class="br0">&#41;</span><span class="sy0">;</span> 
      <span class="kw1">return</span> <span class="br0">&#40;</span>constructedString<span class="br0">&#41;</span><span class="sy0">;</span> 
   <span class="br0">&#125;</span> 
&#160;
   <span class="kw4">byte</span><span class="br0">&#91;</span><span class="br0">&#93;</span> StringToUTF8ByteArray<span class="br0">&#40;</span><span class="kw4">string</span> pXmlString<span class="br0">&#41;</span> 
   <span class="br0">&#123;</span> 
      UTF8Encoding encoding <span class="sy0">=</span> <span class="kw3">new</span> UTF8Encoding<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> 
      <span class="kw4">byte</span><span class="br0">&#91;</span><span class="br0">&#93;</span> byteArray <span class="sy0">=</span> encoding<span class="sy0">.</span><span class="me1">GetBytes</span><span class="br0">&#40;</span>pXmlString<span class="br0">&#41;</span><span class="sy0">;</span> 
      <span class="kw1">return</span> byteArray<span class="sy0">;</span> 
   <span class="br0">&#125;</span> 
&#160;
   <span class="co1">// Here we serialize our UserData object of myData </span>
   <span class="kw4">string</span> SerializeObject<span class="br0">&#40;</span><span class="kw4">object</span> pObject<span class="br0">&#41;</span> 
   <span class="br0">&#123;</span> 
      <span class="kw4">string</span> XmlizedString <span class="sy0">=</span> <span class="kw1">null</span><span class="sy0">;</span> 
      MemoryStream memoryStream <span class="sy0">=</span> <span class="kw3">new</span> MemoryStream<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> 
      XmlSerializer xs <span class="sy0">=</span> <span class="kw3">new</span> XmlSerializer<span class="br0">&#40;</span><span class="kw3">typeof</span><span class="br0">&#40;</span>UserData<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span> 
      XmlTextWriter xmlTextWriter <span class="sy0">=</span> <span class="kw3">new</span> XmlTextWriter<span class="br0">&#40;</span>memoryStream, Encoding<span class="sy0">.</span><span class="me1">UTF8</span><span class="br0">&#41;</span><span class="sy0">;</span> 
      xs<span class="sy0">.</span><span class="me1">Serialize</span><span class="br0">&#40;</span>xmlTextWriter, pObject<span class="br0">&#41;</span><span class="sy0">;</span> 
      memoryStream <span class="sy0">=</span> <span class="br0">&#40;</span>MemoryStream<span class="br0">&#41;</span>xmlTextWriter<span class="sy0">.</span><span class="me1">BaseStream</span><span class="sy0">;</span> 
      XmlizedString <span class="sy0">=</span> UTF8ByteArrayToString<span class="br0">&#40;</span>memoryStream<span class="sy0">.</span><span class="me1">ToArray</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span> 
      <span class="kw1">return</span> XmlizedString<span class="sy0">;</span> 
   <span class="br0">&#125;</span> 
&#160;
   <span class="co1">// Here we deserialize it back into its original form </span>
   <span class="kw4">object</span> DeserializeObject<span class="br0">&#40;</span><span class="kw4">string</span> pXmlizedString<span class="br0">&#41;</span> 
   <span class="br0">&#123;</span> 
      XmlSerializer xs <span class="sy0">=</span> <span class="kw3">new</span> XmlSerializer<span class="br0">&#40;</span><span class="kw3">typeof</span><span class="br0">&#40;</span>UserData<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span> 
      MemoryStream memoryStream <span class="sy0">=</span> <span class="kw3">new</span> MemoryStream<span class="br0">&#40;</span>StringToUTF8ByteArray<span class="br0">&#40;</span>pXmlizedString<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span> 
      XmlTextWriter xmlTextWriter <span class="sy0">=</span> <span class="kw3">new</span> XmlTextWriter<span class="br0">&#40;</span>memoryStream, Encoding<span class="sy0">.</span><span class="me1">UTF8</span><span class="br0">&#41;</span><span class="sy0">;</span> 
      <span class="kw1">return</span> xs<span class="sy0">.</span><span class="me1">Deserialize</span><span class="br0">&#40;</span>memoryStream<span class="br0">&#41;</span><span class="sy0">;</span> 
   <span class="br0">&#125;</span> 
&#160;
   <span class="co1">// Finally our save and load methods for the file itself </span>
   <span class="kw4">void</span> CreateXML<span class="br0">&#40;</span><span class="br0">&#41;</span> 
   <span class="br0">&#123;</span> 
      StreamWriter writer<span class="sy0">;</span> 
      FileInfo t <span class="sy0">=</span> <span class="kw3">new</span> FileInfo<span class="br0">&#40;</span>_FileLocation<span class="sy0">+</span><span class="st0">&quot;<span class="es0">\\</span>&quot;</span><span class="sy0">+</span> _FileName<span class="br0">&#41;</span><span class="sy0">;</span> 
      <span class="kw1">if</span><span class="br0">&#40;</span><span class="sy0">!</span>t<span class="sy0">.</span><span class="me1">Exists</span><span class="br0">&#41;</span> 
      <span class="br0">&#123;</span> 
         writer <span class="sy0">=</span> t<span class="sy0">.</span><span class="me1">CreateText</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> 
      <span class="br0">&#125;</span> 
      <span class="kw1">else</span> 
      <span class="br0">&#123;</span> 
         t<span class="sy0">.</span><span class="me1">Delete</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> 
         writer <span class="sy0">=</span> t<span class="sy0">.</span><span class="me1">CreateText</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> 
      <span class="br0">&#125;</span> 
      writer<span class="sy0">.</span><span class="me1">Write</span><span class="br0">&#40;</span>_data<span class="br0">&#41;</span><span class="sy0">;</span> 
      writer<span class="sy0">.</span><span class="me1">Close</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> 
      Debug<span class="sy0">.</span><span class="me1">Log</span><span class="br0">&#40;</span><span class="st0">&quot;File written.&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span> 
   <span class="br0">&#125;</span> 
&#160;
   <span class="kw4">void</span> LoadXML<span class="br0">&#40;</span><span class="br0">&#41;</span> 
   <span class="br0">&#123;</span> 
      StreamReader r <span class="sy0">=</span> File<span class="sy0">.</span><span class="me1">OpenText</span><span class="br0">&#40;</span>_FileLocation<span class="sy0">+</span><span class="st0">&quot;<span class="es0">\\</span>&quot;</span><span class="sy0">+</span> _FileName<span class="br0">&#41;</span><span class="sy0">;</span> 
      <span class="kw4">string</span> _info <span class="sy0">=</span> r<span class="sy0">.</span><span class="me1">ReadToEnd</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> 
      r<span class="sy0">.</span><span class="me1">Close</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> 
      _data<span class="sy0">=</span>_info<span class="sy0">;</span> 
      Debug<span class="sy0">.</span><span class="me1">Log</span><span class="br0">&#40;</span><span class="st0">&quot;File Read&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span> 
   <span class="br0">&#125;</span> 
<span class="br0">&#125;</span> 
&#160;
<span class="co1">// UserData is our custom class that holds our defined objects we want to store in XML format </span>
 <span class="kw1">public</span> <span class="kw4">class</span> UserData 
 <span class="br0">&#123;</span> 
    <span class="co1">// We have to define a default instance of the structure </span>
   <span class="kw1">public</span> DemoData _iUser<span class="sy0">;</span> 
    <span class="co1">// Default constructor doesn't really do anything at the moment </span>
   <span class="kw1">public</span> UserData<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span> <span class="br0">&#125;</span> 
&#160;
   <span class="co1">// Anything we want to store in the XML file, we define it here </span>
   <span class="kw1">public</span> <span class="kw4">struct</span> DemoData 
   <span class="br0">&#123;</span> 
      <span class="kw1">public</span> <span class="kw4">float</span> x<span class="sy0">;</span> 
      <span class="kw1">public</span> <span class="kw4">float</span> y<span class="sy0">;</span> 
      <span class="kw1">public</span> <span class="kw4">float</span> z<span class="sy0">;</span> 
      <span class="kw1">public</span> <span class="kw4">string</span> name<span class="sy0">;</span> 
   <span class="br0">&#125;</span> 
<span class="br0">&#125;</span></pre></div></div>
<p>Here's a javascript version of the same c# script:
</p>
<div dir="ltr" class="mw-geshi mw-content-ltr"><div class="javascript source-javascript"><pre class="de1"><span class="kw2">import</span> System<span class="sy0">;</span>
<span class="kw2">import</span> System.<span class="me1">Collections</span><span class="sy0">;</span>
<span class="kw2">import</span> System.<span class="me1">Xml</span><span class="sy0">;</span>
<span class="kw2">import</span> System.<span class="me1">Xml</span>.<span class="me1">Serialization</span><span class="sy0">;</span>
<span class="kw2">import</span> System.<span class="me1">IO</span><span class="sy0">;</span>
<span class="kw2">import</span> System.<span class="me1">Text</span><span class="sy0">;</span>
&#160;
<span class="co1">// Anything we want to store in the XML file, we define it here</span>
<span class="kw2">class</span> DemoData
<span class="br0">&#123;</span>
	<span class="kw2">var</span> x <span class="sy0">:</span> float<span class="sy0">;</span>
	<span class="kw2">var</span> y <span class="sy0">:</span> float<span class="sy0">;</span>
	<span class="kw2">var</span> z <span class="sy0">:</span> float<span class="sy0">;</span>
	<span class="kw2">var</span> <span class="kw3">name</span> <span class="sy0">:</span> String<span class="sy0">;</span>
<span class="br0">&#125;</span>
&#160;
<span class="co1">// UserData is our custom class that holds our defined objects we want to store in XML format</span>
 <span class="kw2">class</span> UserData
 <span class="br0">&#123;</span>
    <span class="co1">// We have to define a default instance of the structure</span>
   <span class="kw2">public</span> <span class="kw2">var</span> _iUser <span class="sy0">:</span> DemoData <span class="sy0">=</span> <span class="kw2">new</span> DemoData<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
    <span class="co1">// Default constructor doesn't really do anything at the moment</span>
   <span class="kw2">function</span> UserData<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span> <span class="br0">&#125;</span>
<span class="br0">&#125;</span>
&#160;
<span class="co1">//public class GameSaveLoad: MonoBehaviour {</span>
&#160;
<span class="co1">// An example where the encoding can be found is at</span>
<span class="co1">// http://www.eggheadcafe.com/articles/system.xml.xmlserialization.asp</span>
<span class="co1">// We will just use the KISS method and cheat a little and use</span>
<span class="co1">// the examples from the web page since they are fully described</span>
&#160;
<span class="co1">// This is our local private members</span>
<span class="kw2">private</span> <span class="kw2">var</span> _Save <span class="sy0">:</span> Rect<span class="sy0">;</span>
<span class="kw2">private</span> <span class="kw2">var</span> _Load <span class="sy0">:</span> Rect<span class="sy0">;</span>
<span class="kw2">private</span> <span class="kw2">var</span> _SaveMSG <span class="sy0">:</span> Rect<span class="sy0">;</span>
<span class="kw2">private</span> <span class="kw2">var</span> _LoadMSG <span class="sy0">:</span> Rect<span class="sy0">;</span>
<span class="co1">//var _ShouldSave&#160;: boolean;</span>
<span class="co1">//var _ShouldLoad&#160;: boolean;</span>
<span class="co1">//var _SwitchSave&#160;: boolean;</span>
<span class="co1">//var _SwitchLoad&#160;: boolean;</span>
<span class="kw2">private</span> <span class="kw2">var</span> _FileLocation <span class="sy0">:</span> String<span class="sy0">;</span>
<span class="kw2">private</span> <span class="kw2">var</span> _FileName <span class="sy0">:</span> String <span class="sy0">=</span> <span class="st0">&quot;SaveData.xml&quot;</span><span class="sy0">;</span>
&#160;
<span class="co1">//public GameObject _Player;</span>
<span class="kw2">var</span> _Player <span class="sy0">:</span> GameObject<span class="sy0">;</span>
<span class="kw2">var</span> _PlayerName <span class="sy0">:</span> String <span class="sy0">=</span> <span class="st0">&quot;Joe Schmoe&quot;</span><span class="sy0">;</span>
&#160;
<span class="kw2">private</span> <span class="kw2">var</span> myData <span class="sy0">:</span> UserData<span class="sy0">;</span>
<span class="kw2">private</span> <span class="kw2">var</span> _data <span class="sy0">:</span> String<span class="sy0">;</span>
&#160;
<span class="kw2">private</span> <span class="kw2">var</span> VPosition <span class="sy0">:</span> Vector3<span class="sy0">;</span>
&#160;
<span class="co1">// When the EGO is instansiated the Start will trigger</span>
<span class="co1">// so we setup our initial values for our local members</span>
<span class="co1">//function Start () {</span>
<span class="kw2">function</span> Awake <span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>	
      <span class="co1">// We setup our rectangles for our messages</span>
      _Save<span class="sy0">=</span><span class="kw2">new</span> Rect<span class="br0">&#40;</span><span class="nu0">10</span><span class="sy0">,</span><span class="nu0">80</span><span class="sy0">,</span><span class="nu0">100</span><span class="sy0">,</span><span class="nu0">20</span><span class="br0">&#41;</span><span class="sy0">;</span>
      _Load<span class="sy0">=</span><span class="kw2">new</span> Rect<span class="br0">&#40;</span><span class="nu0">10</span><span class="sy0">,</span><span class="nu0">100</span><span class="sy0">,</span><span class="nu0">100</span><span class="sy0">,</span><span class="nu0">20</span><span class="br0">&#41;</span><span class="sy0">;</span>
      _SaveMSG<span class="sy0">=</span><span class="kw2">new</span> Rect<span class="br0">&#40;</span><span class="nu0">10</span><span class="sy0">,</span><span class="nu0">120</span><span class="sy0">,</span><span class="nu0">200</span><span class="sy0">,</span><span class="nu0">40</span><span class="br0">&#41;</span><span class="sy0">;</span>
      _LoadMSG<span class="sy0">=</span><span class="kw2">new</span> Rect<span class="br0">&#40;</span><span class="nu0">10</span><span class="sy0">,</span><span class="nu0">140</span><span class="sy0">,</span><span class="nu0">200</span><span class="sy0">,</span><span class="nu0">40</span><span class="br0">&#41;</span><span class="sy0">;</span>
&#160;
      <span class="co1">// Where we want to save and load to and from</span>
      _FileLocation<span class="sy0">=</span>Application.<span class="me1">dataPath</span><span class="sy0">;</span>
&#160;
&#160;
      <span class="co1">// we need soemthing to store the information into</span>
      myData<span class="sy0">=</span><span class="kw2">new</span> UserData<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
   <span class="br0">&#125;</span>
&#160;
<span class="kw2">function</span> Update <span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><span class="br0">&#125;</span>
&#160;
<span class="kw2">function</span> OnGUI<span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>   
&#160;
   <span class="co1">// ***************************************************</span>
   <span class="co1">// Loading The Player...</span>
   <span class="co1">// **************************************************       </span>
   <span class="kw1">if</span> <span class="br0">&#40;</span>GUI.<span class="me1">Button</span><span class="br0">&#40;</span>_Load<span class="sy0">,</span><span class="st0">&quot;Load&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&#160;
      GUI.<span class="me1">Label</span><span class="br0">&#40;</span>_LoadMSG<span class="sy0">,</span><span class="st0">&quot;Loading from: &quot;</span><span class="sy0">+</span>_FileLocation<span class="br0">&#41;</span><span class="sy0">;</span>
      <span class="co1">// Load our UserData into myData</span>
      LoadXML<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
      <span class="kw1">if</span><span class="br0">&#40;</span>_data.<span class="me1">ToString</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy0">!=</span> <span class="st0">&quot;&quot;</span><span class="br0">&#41;</span>
      <span class="br0">&#123;</span>
         <span class="co1">// notice how I use a reference to type (UserData) here, you need this</span>
         <span class="co1">// so that the returned object is converted into the correct type</span>
         <span class="co1">//myData = (UserData)DeserializeObject(_data);</span>
         myData <span class="sy0">=</span> DeserializeObject<span class="br0">&#40;</span>_data<span class="br0">&#41;</span><span class="sy0">;</span>
         <span class="co1">// set the players position to the data we loaded</span>
         VPosition<span class="sy0">=</span><span class="kw2">new</span> Vector3<span class="br0">&#40;</span>myData._iUser.<span class="me1">x</span><span class="sy0">,</span>myData._iUser.<span class="me1">y</span><span class="sy0">,</span>myData._iUser.<span class="me1">z</span><span class="br0">&#41;</span><span class="sy0">;</span>             
         _Player.<span class="me1">transform</span>.<span class="me1">position</span><span class="sy0">=</span>VPosition<span class="sy0">;</span>
         <span class="co1">// just a way to show that we loaded in ok</span>
         Debug.<span class="me1">Log</span><span class="br0">&#40;</span>myData._iUser.<span class="kw3">name</span><span class="br0">&#41;</span><span class="sy0">;</span>
      <span class="br0">&#125;</span>
&#160;
   <span class="br0">&#125;</span>
&#160;
   <span class="co1">// ***************************************************</span>
   <span class="co1">// Saving The Player...</span>
   <span class="co1">// **************************************************   </span>
   <span class="kw1">if</span> <span class="br0">&#40;</span>GUI.<span class="me1">Button</span><span class="br0">&#40;</span>_Save<span class="sy0">,</span><span class="st0">&quot;Save&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&#160;
      GUI.<span class="me1">Label</span><span class="br0">&#40;</span>_SaveMSG<span class="sy0">,</span><span class="st0">&quot;Saving to: &quot;</span><span class="sy0">+</span>_FileLocation<span class="br0">&#41;</span><span class="sy0">;</span>
      <span class="co1">//Debug.Log(&quot;SaveLoadXML: sanity check:&quot;+ _Player.transform.position.x);</span>
&#160;
      myData._iUser.<span class="me1">x</span> <span class="sy0">=</span> _Player.<span class="me1">transform</span>.<span class="me1">position</span>.<span class="me1">x</span><span class="sy0">;</span>
      myData._iUser.<span class="me1">y</span> <span class="sy0">=</span> _Player.<span class="me1">transform</span>.<span class="me1">position</span>.<span class="me1">y</span><span class="sy0">;</span>
      myData._iUser.<span class="me1">z</span> <span class="sy0">=</span> _Player.<span class="me1">transform</span>.<span class="me1">position</span>.<span class="me1">z</span><span class="sy0">;</span>
      myData._iUser.<span class="kw3">name</span> <span class="sy0">=</span> _PlayerName<span class="sy0">;</span>   
&#160;
      <span class="co1">// Time to creat our XML!</span>
      _data <span class="sy0">=</span> SerializeObject<span class="br0">&#40;</span>myData<span class="br0">&#41;</span><span class="sy0">;</span>
      <span class="co1">// This is the final resulting XML from the serialization process</span>
      CreateXML<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
      Debug.<span class="me1">Log</span><span class="br0">&#40;</span>_data<span class="br0">&#41;</span><span class="sy0">;</span>
   <span class="br0">&#125;</span>
&#160;
&#160;
<span class="br0">&#125;</span>
&#160;
<span class="coMULTI">/* The following metods came from the referenced URL */</span>
<span class="co1">//string UTF8ByteArrayToString(byte[] characters)</span>
<span class="kw2">function</span> UTF8ByteArrayToString<span class="br0">&#40;</span>characters <span class="sy0">:</span> byte<span class="br0">&#91;</span><span class="br0">&#93;</span> <span class="br0">&#41;</span>
<span class="br0">&#123;</span>     
   <span class="kw2">var</span> encoding <span class="sy0">:</span> UTF8Encoding  <span class="sy0">=</span> <span class="kw2">new</span> UTF8Encoding<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
   <span class="kw2">var</span> constructedString <span class="sy0">:</span> String  <span class="sy0">=</span> encoding.<span class="me1">GetString</span><span class="br0">&#40;</span>characters<span class="br0">&#41;</span><span class="sy0">;</span>
   <span class="kw1">return</span> <span class="br0">&#40;</span>constructedString<span class="br0">&#41;</span><span class="sy0">;</span>
<span class="br0">&#125;</span>
&#160;
<span class="co1">//byte[] StringToUTF8ByteArray(string pXmlString)</span>
<span class="kw2">function</span> StringToUTF8ByteArray<span class="br0">&#40;</span>pXmlString <span class="sy0">:</span> String<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
   <span class="kw2">var</span> encoding <span class="sy0">:</span> UTF8Encoding  <span class="sy0">=</span> <span class="kw2">new</span> UTF8Encoding<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
   <span class="kw2">var</span> byteArray <span class="sy0">:</span> byte<span class="br0">&#91;</span><span class="br0">&#93;</span>  <span class="sy0">=</span> encoding.<span class="me1">GetBytes</span><span class="br0">&#40;</span>pXmlString<span class="br0">&#41;</span><span class="sy0">;</span>
   <span class="kw1">return</span> byteArray<span class="sy0">;</span>
<span class="br0">&#125;</span>
&#160;
   <span class="co1">// Here we serialize our UserData object of myData</span>
   <span class="co1">//string SerializeObject(object pObject)</span>
<span class="kw2">function</span> SerializeObject<span class="br0">&#40;</span>pObject <span class="sy0">:</span> Object<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
   <span class="kw2">var</span> XmlizedString <span class="sy0">:</span> String  <span class="sy0">=</span> <span class="kw2">null</span><span class="sy0">;</span>
   <span class="kw2">var</span> memoryStream <span class="sy0">:</span> MemoryStream  <span class="sy0">=</span> <span class="kw2">new</span> MemoryStream<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
   <span class="kw2">var</span> xs <span class="sy0">:</span> XmlSerializer <span class="sy0">=</span> <span class="kw2">new</span> XmlSerializer<span class="br0">&#40;</span><span class="kw1">typeof</span><span class="br0">&#40;</span>UserData<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
   <span class="kw2">var</span> xmlTextWriter <span class="sy0">:</span> System.<span class="me1">Xml</span>.<span class="me1">XmlTextWriter</span>  <span class="sy0">=</span> <span class="kw2">new</span> System.<span class="me1">Xml</span>.<span class="me1">XmlTextWriter</span><span class="br0">&#40;</span>memoryStream<span class="sy0">,</span> Encoding.<span class="me1">UTF8</span><span class="br0">&#41;</span><span class="sy0">;</span>
   xs.<span class="me1">Serialize</span><span class="br0">&#40;</span>xmlTextWriter<span class="sy0">,</span> pObject<span class="br0">&#41;</span><span class="sy0">;</span>
   memoryStream <span class="sy0">=</span> xmlTextWriter.<span class="me1">BaseStream</span><span class="sy0">;</span> <span class="co1">// (MemoryStream)</span>
   XmlizedString <span class="sy0">=</span> UTF8ByteArrayToString<span class="br0">&#40;</span>memoryStream.<span class="me1">ToArray</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
   <span class="kw1">return</span> XmlizedString<span class="sy0">;</span>
<span class="br0">&#125;</span>
&#160;
   <span class="co1">// Here we deserialize it back into its original form</span>
   <span class="co1">//object DeserializeObject(string pXmlizedString)</span>
<span class="kw2">function</span> DeserializeObject<span class="br0">&#40;</span>pXmlizedString <span class="sy0">:</span> String<span class="br0">&#41;</span>   
<span class="br0">&#123;</span>
   <span class="kw2">var</span> xs <span class="sy0">:</span> XmlSerializer  <span class="sy0">=</span> <span class="kw2">new</span> XmlSerializer<span class="br0">&#40;</span><span class="kw1">typeof</span><span class="br0">&#40;</span>UserData<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
   <span class="kw2">var</span> memoryStream <span class="sy0">:</span> MemoryStream  <span class="sy0">=</span> <span class="kw2">new</span> MemoryStream<span class="br0">&#40;</span>StringToUTF8ByteArray<span class="br0">&#40;</span>pXmlizedString<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
   <span class="kw2">var</span> xmlTextWriter <span class="sy0">:</span> System.<span class="me1">Xml</span>.<span class="me1">XmlTextWriter</span>  <span class="sy0">=</span> <span class="kw2">new</span> System.<span class="me1">Xml</span>.<span class="me1">XmlTextWriter</span><span class="br0">&#40;</span>memoryStream<span class="sy0">,</span> Encoding.<span class="me1">UTF8</span><span class="br0">&#41;</span><span class="sy0">;</span>
   <span class="kw1">return</span> xs.<span class="me1">Deserialize</span><span class="br0">&#40;</span>memoryStream<span class="br0">&#41;</span><span class="sy0">;</span>
<span class="br0">&#125;</span>
&#160;
   <span class="co1">// Finally our save and load methods for the file itself</span>
<span class="kw2">function</span> CreateXML<span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>
   <span class="kw2">var</span> writer <span class="sy0">:</span> StreamWriter<span class="sy0">;</span>
   <span class="co1">//FileInfo t = new FileInfo(_FileLocation+&quot;\\&quot;+ _FileName);</span>
   <span class="kw2">var</span> t <span class="sy0">:</span> FileInfo <span class="sy0">=</span> <span class="kw2">new</span> FileInfo<span class="br0">&#40;</span>_FileLocation<span class="sy0">+</span><span class="st0">&quot;/&quot;</span><span class="sy0">+</span> _FileName<span class="br0">&#41;</span><span class="sy0">;</span>
   <span class="kw1">if</span><span class="br0">&#40;</span><span class="sy0">!</span>t.<span class="me1">Exists</span><span class="br0">&#41;</span>
   <span class="br0">&#123;</span>
      writer <span class="sy0">=</span> t.<span class="me1">CreateText</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
   <span class="br0">&#125;</span>
   <span class="kw1">else</span>
   <span class="br0">&#123;</span>
      t.<span class="kw1">Delete</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
      writer <span class="sy0">=</span> t.<span class="me1">CreateText</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
   <span class="br0">&#125;</span>
   writer.<span class="kw1">Write</span><span class="br0">&#40;</span>_data<span class="br0">&#41;</span><span class="sy0">;</span>
   writer.<span class="kw3">Close</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
   Debug.<span class="me1">Log</span><span class="br0">&#40;</span><span class="st0">&quot;File written.&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="br0">&#125;</span>
&#160;
<span class="kw2">function</span> LoadXML<span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>
   <span class="co1">//StreamReader r = File.OpenText(_FileLocation+&quot;\\&quot;+ _FileName);</span>
   <span class="kw2">var</span> r <span class="sy0">:</span> StreamReader <span class="sy0">=</span> File.<span class="me1">OpenText</span><span class="br0">&#40;</span>_FileLocation<span class="sy0">+</span><span class="st0">&quot;/&quot;</span><span class="sy0">+</span> _FileName<span class="br0">&#41;</span><span class="sy0">;</span>
   <span class="kw2">var</span> _info <span class="sy0">:</span> String <span class="sy0">=</span> r.<span class="me1">ReadToEnd</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
   r.<span class="kw3">Close</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
   _data<span class="sy0">=</span>_info<span class="sy0">;</span>
   Debug.<span class="me1">Log</span><span class="br0">&#40;</span><span class="st0">&quot;File Read&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="br0">&#125;</span></pre></div></div>
<h3> <span class="mw-headline" id="Modify_to_static">Modify to static </span></h3>
<p>Those are scripts modified to static for easy extensions. Just drag GameSateData.cs script to GameObject for use.
</p><p>Links&#160;: <a rel="nofollow" class="external free" href="http://unifycommunity.com/wiki/index.php?title=File:XML.zip">http://unifycommunity.com/wiki/index.php?title=File:XML.zip</a>
</p>
<!-- 
NewPP limit report
Preprocessor node count: 24/1000000
Post-expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key mediawiki:pcache:idhash:2365-0!*!*!!*!*!* and timestamp 20140517182606 -->
</div>				<!-- /bodycontent -->
								<!-- printfooter -->
				<div class="printfooter">
				Retrieved from "<a href="http://wiki.unity3d.com/index.php?title=Save_and_Load_from_XML&amp;oldid=14817">http://wiki.unity3d.com/index.php?title=Save_and_Load_from_XML&amp;oldid=14817</a>"				</div>
				<!-- /printfooter -->
												<!-- catlinks -->
				<div id='catlinks' class='catlinks catlinks-allhidden'></div>				<!-- /catlinks -->
												<div class="visualClear"></div>
				<!-- debughtml -->
								<!-- /debughtml -->
			</div>
			<!-- /bodyContent -->
		</div>
		<!-- /content -->
		<!-- header -->
		<div id="mw-head" class="noprint">
			
<!-- 0 -->
<div id="p-personal" class="">
	<h5>Personal tools</h5>
	<ul>
		<li id="pt-login"><a href="/index.php?title=Special:UserLogin&amp;returnto=Save+and+Load+from+XML" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in / create account</a></li>
	</ul>
</div>

<!-- /0 -->
			<div id="left-navigation">
				
<!-- 0 -->
<div id="p-namespaces" class="vectorTabs">
	<h5>Namespaces</h5>
	<ul>
					<li  id="ca-nstab-main" class="selected"><span><a href="/index.php/Save_and_Load_from_XML"  title="View the content page [c]" accesskey="c">Page</a></span></li>
					<li  id="ca-talk"><span><a href="/index.php/Talk:Save_and_Load_from_XML"  title="Discussion about the content page [t]" accesskey="t">Discussion</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-variants" class="vectorMenu emptyPortlet">
	<h4>
		</h4>
	<h5><span>Variants</span><a href="#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->
			</div>
			<div id="right-navigation">
				
<!-- 0 -->
<div id="p-views" class="vectorTabs">
	<h5>Views</h5>
	<ul>
					<li id="ca-view" class="selected"><span><a href="/index.php/Save_and_Load_from_XML" >Read</a></span></li>
					<li id="ca-viewsource"><span><a href="/index.php?title=Save_and_Load_from_XML&amp;action=edit"  title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></span></li>
					<li id="ca-history" class="collapsible"><span><a href="/index.php?title=Save_and_Load_from_XML&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">View history</a></span></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-cactions" class="vectorMenu emptyPortlet">
	<h5><span>Actions</span><a href="#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->

<!-- 2 -->
<div id="p-search">
	<h5><label for="searchInput">Search</label></h5>
	<form action="/index.php" id="searchform">
				<div>
			<input type="search" name="search" title="Search Unify Community Wiki [f]" accesskey="f" id="searchInput" />			<input type="submit" name="go" value="Go" title="Go to a page with this exact name if exists" id="searchGoButton" class="searchButton" />			<input type="submit" name="fulltext" value="Search" title="Search the pages for this text" id="mw-searchButton" class="searchButton" />					<input type='hidden' name="title" value="Special:Search"/>
		</div>
	</form>
</div>

<!-- /2 -->
			</div>
		</div>
		<!-- /header -->
		<!-- panel -->
			<div id="mw-panel" class="noprint">
				<!-- logo -->
					<div id="p-logo"><a style="background-image: url(/images/wiki.png);" href="/index.php/Main_Page"  title="Visit the main page"></a></div>
				<!-- /logo -->
				
<!-- Navigation -->
<div class="portal" id='p-Navigation'>
	<h5>Navigation</h5>
	<div class="body">
		<ul>
			<li id="n-mainpage"><a href="/index.php/Main_Page" title="Visit the main page [z]" accesskey="z">Main Page</a></li>
			<li id="n-Extensions"><a href="/index.php/Extensions">Extensions</a></li>
			<li id="n-Particle-Library"><a href="/index.php/Particle_Library">Particle Library</a></li>
			<li id="n-Programming"><a href="/index.php/Programming">Programming</a></li>
			<li id="n-Scripts"><a href="/index.php/Scripts">Scripts</a></li>
			<li id="n-Shaders"><a href="/index.php/Shaders">Shaders</a></li>
			<li id="n-Wizards"><a href="/index.php/Wizards">Wizards</a></li>
		</ul>
	</div>
</div>

<!-- /Navigation -->

<!-- Extras -->
<div class="portal" id='p-Extras'>
	<h5>Extras</h5>
	<div class="body">
		<ul>
			<li id="n-Tips.2C-Tricks.2C-Tools"><a href="/index.php/Tips">Tips, Tricks, Tools</a></li>
			<li id="n-Tutorials"><a href="/index.php/Tutorials">Tutorials</a></li>
			<li id="n-Unity-Projects"><a href="/index.php/Unity_Projects">Unity Projects</a></li>
			<li id="n-Contests"><a href="/index.php/Contests">Contests</a></li>
			<li id="n-IRC-Chatroom"><a href="/index.php/IRC">IRC Chatroom</a></li>
		</ul>
	</div>
</div>

<!-- /Extras -->

<!-- Quick Links -->
<div class="portal" id='p-Quick_Links'>
	<h5>Quick Links</h5>
	<div class="body">
		<ul>
			<li id="n-portal"><a href="/index.php/Unify:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li>
			<li id="n-recentchanges"><a href="/index.php/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
			<li id="n-New-Pages"><a href="/index.php/Special:NewPages">New Pages</a></li>
			<li id="n-help"><a href="/index.php/Help:Contents" title="The place to find out">Help</a></li>
		</ul>
	</div>
</div>

<!-- /Quick Links -->

<!-- SEARCH -->

<!-- /SEARCH -->

<!-- TOOLBOX -->
<div class="portal" id='p-tb'>
	<h5>Toolbox</h5>
	<div class="body">
		<ul>
			<li id="t-whatlinkshere"><a href="/index.php/Special:WhatLinksHere/Save_and_Load_from_XML" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
			<li id="t-recentchangeslinked"><a href="/index.php/Special:RecentChangesLinked/Save_and_Load_from_XML" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
			<li id="t-specialpages"><a href="/index.php/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
			<li><a href="/index.php?title=Save_and_Load_from_XML&amp;printable=yes" rel="alternate">Printable version</a></li>
			<li id="t-permalink"><a href="/index.php?title=Save_and_Load_from_XML&amp;oldid=14817" title="Permanent link to this revision of the page">Permanent link</a></li>
		</ul>
	</div>
</div>

<!-- /TOOLBOX -->

<!-- LANGUAGES -->

<!-- /LANGUAGES -->
			</div>
		<!-- /panel -->
		<!-- footer -->
		<div id="footer">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 16 October 2012, at 04:01.</li>
											<li id="footer-info-viewcount">This page has been accessed 80,584 times.</li>
											<li id="footer-info-copyright">Content is available under <a class="external" href="http://creativecommons.org/licenses/by-sa/3.0/">Creative Commons Attribution Share Alike</a>.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="/index.php/Unify:Privacy_policy" title="Unify:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="/index.php/Unify:About" title="Unify:About">About Unify Community Wiki</a></li>
											<li id="footer-places-disclaimer"><a href="/index.php/Unify:General_disclaimer" title="Unify:General disclaimer">Disclaimers</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
					<li id="footer-copyrightico">
						<a href="http://creativecommons.org/licenses/by-sa/3.0/"><img src="/skins/common/images/cc-by-sa.png" alt="Creative Commons Attribution Share Alike" width="88" height="31" /></a>
					</li>
					<li id="footer-poweredbyico">
						<a href="//www.mediawiki.org/"><img src="/skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31" /></a>
					</li>
				</ul>
						<div style="clear:both"></div>
		</div>
		<!-- /footer -->
		<script src="http://wiki.unity3d.com/load.php?debug=false&amp;lang=en&amp;modules=skins.vector&amp;only=scripts&amp;skin=vector&amp;*"></script>
<script>if(window.mw){
mw.loader.load(["mediawiki.user","mediawiki.page.ready"], null, true);
}</script>
<script src="http://wiki.unity3d.com/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=scripts&amp;skin=vector&amp;*"></script>
<!-- Served in 0.151 secs. -->
	</body>
</html>
