Usage 

 Event listener 


void OnPropCollected( PropType propType ) {
	if (propType == PropType.Life)
		livesAmount++;
}

 Registering an event listener 


void Start() {
	Messenger.AddListener< Prop >( "prop collected", OnPropCollected );
}

 Unregistering an event listener 


	Messenger.RemoveListener< Prop > ( "prop collected", OnPropCollected );

 Broadcasting an event 


public void OnTriggerEnter(Collider _collider) 
{
	Messenger.Broadcast< PropType > ( "prop collected", _collider.gameObject.GetComponent<Prop>().propType );
}

 Cleaning up the messenger 

The messenger cleans up its eventTable automatically when a new level loads. This will ensure that the eventTable of the messenger gets cleaned up and will save us from unexpected MissingReferenceExceptions. In case you want to clean up manager's eventTable manually, there's such an option by calling Messenger.Cleanup(); 

 Permanent messages 

If you want a certain message to survive the Cleanup, mark it with Messenger.MarkAsPermanent(string). This may be required if a certain class responds to messages broadcasted from across different levels. 
